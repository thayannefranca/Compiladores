<!-- ant build file for cse 401 compiler project -->
<!-- hp, 1/10 -->

<!-- This would be better if symbolic variables were used for various class
     and path names.  Maybe next time.... -->

<project name="minijava" default="compile">

  <!-- if you are using eclipse, you can uncomment the following property
       declaration to get Eclipse to use its own compiler instead of javac
       when it runs this build file. -->
  <!--
  <property name="build.compiler"
	    value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
  -->

  <!-- build targets for compiler -->
  <!-- you might not need to change much of anything here -->

  <target name="init">
    <mkdir dir="build/classes" />
  </target>

  <target name="clean">
    <delete dir="build"/>
    <delete file="src/Parser/parser.java"/>
    <delete file="src/Parser/sym.java"/>
    <delete file="src/Scanner/scanner.java"/>
    <delete file="src/Scanner/scanner.java~"/>
  </target>

  <target name="check.parse.files">
    <uptodate targetfile="src/Parser/parser.java"
	      srcfile="src/Parser/minijava.cup"
	      property="parser.uptodate"/>
    <uptodate targetfile="src/Scanner/scanner.java"
	      srcfile="src/Scanner/minijava.jflex"
	      property="scanner.uptodate"/>
    <condition property="scanner.parser.uptodate">
      <and>
	<isset property="scanner.uptodate"/>
	<isset property="parser.uptodate"/>
      </and>
    </condition>
  </target>

  <target name="gen-parser" depends="check.parse.files"
	  unless="parser.uptodate">
    <java jar="lib/CUP.jar" fork="true" failonerror="true">
      <arg value="-destdir"/> <arg value="src/Parser"/>
      <arg value="src/Parser/minijava.cup"/>
    </java>
  </target>

  <target name="gen-scanner" depends="gen-parser, check.parse.files"
	  unless="scanner.parser.uptodate">
    <java classname="JFlex.Main" classpath="lib/JFlex.jar"
	  fork="true" failonerror="true">
      <arg value="src/Scanner/minijava.jflex"/>
    </java>
  </target>

  <target name="compile" depends="init, gen-scanner">
    <javac srcdir="src" destdir="build/classes" classpath="lib/CUP.jar"/>
  </target>

  <!-- targets for running test programs -->
  <!-- you will want to expand on what's here. -->

  <!-- run scanner and parser test programs on initial demo input -->

  <target name="test-scanner" depends="compile">
    <java classname="TestScanner" classpath="build/classes;lib/CUP.jar"
	  fork="true" input="SamplePrograms/Example.java">
    </java>
  </target>

  <target name="test-parser" depends="compile">
    <java classname="TestParser" classpath="build/classes;lib/CUP.jar"
	  fork="true" input="SamplePrograms/Example.java">
    </java>
  </target>

</project>
